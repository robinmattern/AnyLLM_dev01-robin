## frontend-src-components-WorkspaceChat-ChatContainer-index.jsx
--------------------------------------------------------------------------------------------------------------
```
[ 10] export default function ChatContainer( { workspace, knownHistory = [] } ) {
[ 19]   const handleSubmit = async (event) => { .... }
[ 40]   const sendCommand  = async (command, submit = false) => { .... }
[ 64]   useEffect( () => { 
[ 65]     fetchReply() { 
[ 90]       await Workspace.streamChat( workspace, promptMessage.userMessage, (chatResult) => handleChat( .... ) )
[103]       return }
[105]          loadingResponse === true && fetchRFeply
[106]     }, [ loadingResponse, chatHistory, workspace ] ) // eoc useEffect 
[108]     return ( <div> .... </div> );
[132]   } // eoc ChatContainer 
```

## frontend-src-models-workspace.js
--------------------------------------------------------------------------------------------------------------------------
```
[  7] const Workspace = {
[  8]   new:                  async function (       data    = { } ) { .... }
[ 21]   update:               async function ( slug, data    = { } ) { .... }
[ 37]   modifyEmbeddings:     async function ( slug, changes = { } ) { .... }
[ 53]   chatHistory:          async function ( slug       ) { .... }
[ 63]   updateChatFeedback:   async function ( chatId, slug, feedback ) { .... }
[ 76]   streamChat:           async function ( { slug }, message, handleChat ) { 
[ 78]       await fetchEventSource( `${API_BASE}/workspace/${slug}/stream-chat`, { method: "GET", body,  headers 
[ 82]                             , signal, openWhenHidden, async onopen, async onmessage, onerror } )
[135]   all:                  async function (            ) { .... }
[146]   bySlug:               async function ( slug = ""  ) { .... }
[155]   delete:               async function ( slug       ) { .... }
[165]   uploadFile:           async function ( slug, formData ) { .... }
[175]   uploadLink:           async function ( slug, link ) { .... }
[186]   getSuggestedMessages: async function ( slug       ) { .... }
[202]   setSuggestedMessages: async function ( slug, messages ) { .... }
[221]   setPinForDocument:    async function ( slug, docPath, pinStatus) { .... }
[241]   }
[242] export default Workspace;
```

## vite-node_modules-@microsoft-fetch-event-source-lib-esm-fetch.js
--------------------------------------------------------------------------------------------------------------------------
```
[  1] import "/node_modules/.vite/deps/chunk-AUZ3RYOM.js?v=5b3a0612";
[122]      var EventStreamContentType = "text/event-stream";
[125] function fetchEvenSource( input, _a) { 
[127]   return new Promise( ( resolve, reject ) => { async function create( ) {   
[159]       const response = await fetch( input, Object.assign( Object.assign( { }, rest ), { headers, signal: curRequestController.signal } ) );
[160]       await onopen( response ); } } ) }
[195] export { EventStreamContentType, fetchEventSource };
```

## server-endpoints-api-workspace-index.js
--------------------------------------------------------------------------------------------------------------------------
```
[ 21] function apiWorkspaceEndpoints( app ) {
[ 24]   app.post(   "/v1/workspace/new",                      [validApiKey], async (request, response) => { .... } )
[ 87]   app.get(    "/v1/workspaces",                         [validApiKey], async (request, response) => { .... } )
[129]   app.get(    "/v1/workspace/:slug",                    [validApiKey], async (request, response) => { .... } )
[178]   app.delete( "/v1/workspace/:slug",                    [validApiKey], async (request, response) => { .... } )
[230]   app.post(   "/v1/workspace/:slug/update",             [validApiKey], async (request, response) => { .... } )
[310]   app.get(    "/v1/workspace/:slug/chats",              [validApiKey], async (request, response) => { .... } )
[371]   app.post(   "/v1/workspace/:slug/update-embeddings",  [validApiKey], async (request, response) => { .... } )
[450]   app.post(   "/v1/workspace/:slug/chat",               [validApiKey], async (request, response) => { .... } )
[548]   app.post(   "/v1/workspace/:slug/stream-chat",        [validApiKey], async (request, response) => { .... } )
[671]   }
[673] module.exports = { workspaceEndpoints };
```

## server-endpoints-workspaces.js
--------------------------------------------------------------------------------------------------------------------------
```
[ 23] function workspaceEndpoints( app ) {
[ 26]   app.post(   "/workspace/new",                         [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[ 63]   app.post(   "/workspace/:slug/update",                [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[ 92]   app.post(   "/workspace/:slug/upload",                [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[133]   app.post(   "/workspace/:slug/upload-link",           [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[171]   app.post(   "/workspace/:slug/update-embeddings",     [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[215]   app.delete( "/workspace/:slug",                       [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[258]   app.get(    "/workspaces",                            [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[276]   app.get(    "/workspace/:slug",                       [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[295]   app.get(    "/workspace/:slug/chats",                 [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[323]   app.post(   "/workspace/:slug/chat-feedback/:chatId", [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[352]   app.get(    "/workspace/:slug/suggested-messages",    [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[370]   app.post(   "/workspace/:slug/suggested-messages",    [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[399]   app.post(   "/workspace/:slug/update-pin",            [ validatedRequest, flexUserRoleValid( [ ... ] ) ], .... )
[425]   }
[427]  module.exports = { workspaceEndpoints };
```

## server-models-workspace.js 
--------------------------------------------------------------------------------------------------------------------------
```
[  8] const Workspace = {
[ 24]   new:              async function( name = null, creatorId = null) { .... }
[ 51]   update:           async function( id = null, data = { } ) { .... }
[ 72]   getWithUser:      async function( user = null, clause = { } ) { .... }
[104]   get:              async function( clause = { } ) { .... }
[120]   delete:           async function( clause = { } ) { .... }
[132]   where:            async function( clause = { }, limit = null, orderBy = null ) {  
[134]     const results = await prisma.workspaces.findMany( { where: clause, limit, orderBy } ); return results; }
[146]   whereWithUser:    async function(                   { where: user,   limit, orderBY } ) { .... } 
[175]   whereWithUsers:   async function( clause = { }, limit = null, orderBy = null ) { .... }
[191]   updateUsers:      async function( workspaceId, userIds = [ ] ) { .... }
[202]   resetWorkspaceChatModels: async () => { .... }
[215]   }
[217]   module.exports = { workspaceEndpoints };
```

## server-models-document.js
--------------------------------------------------------------------------------------------------------------------------
```
[  7] const Document = {
[ 10]   forWorkspace:  async function ( clause = { } ) { .... }
[ 17]   delete:  async function ( clause = { } ) { .... }
[ 27]   get:     async function ( clause = { } ) { .... }
[ 39]   getPins: async function ( clause = { } ) { .... }
[ 54]   where:   async function ( clause = { }, limit = null, orderBy = null) { .... }
[ 68]   addDocuments:    async function (workspace, additions = [], userId = null) { .... }
[130]   removeDocuments: async function (workspace, removals  = [], userId = null) { .... }
[173]   count:   async function ( clause = { }, limit = null) { .... }
[185]   update:  async function ( id = null, data = { }) { .... }
[206]   }
[207] module.exports = { Document };
```

## collector-node_modules-langchain-dist-document_loaders-web-puppeteer.cjs
--------------------------------------------------------------------------------------------------------------------------
```
[ 23] class PuppeteerWebBaseLoader extends base_js_1.BaseDocumentLoader {
[ 40]   static async _scrape( url, options ) {
[ 65]   async scrape() {
[ 73]   async load() {
[ 87]   static async _screenshot( url, options ) {
[112]   async screenshot() {
[120]   static async imports() {
[131]   }
[132] exports.PuppeteerWebBaseLoader = PuppeteerWebBaseLoader;
```

## collector-processLink-convert-generic.js
--------------------------------------------------------------------------------------------------------------------------
```
[  9]  async function scrapeGenericUrl( link ) { .... }
[ 22]  const url      = new URL( link )
[ 23]  const filename = (url.host + "=" + url.pathname).replace( ".", "_");
[ 25]  const date     = { .... }
[ 47]  sync function getPageContent( link ) { .... }
[ 77]  module.exports = { scrapeGenericUrl };
```